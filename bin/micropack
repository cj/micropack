#!/usr/bin/env node

const babelrc = require('../.babelrc.json')
const parse   = require('minimist')
const serve   = require('micro')

require('babel-register')({
  presets: babelrc.presets,
  plugins: babelrc.plugins
})

const args = parse(process.argv, {
  alias: {
    H: 'host',
    h: 'help',
    p: 'port',
    w: 'watch'
  },
  boolean: ['h'],
  default: {
    H: '0.0.0.0',
    p: 3000
  }
})

let [,, func = 'run'] = args._

const help = () => {
  console.log( // eslint-disable-line no-console
  `
  Usage: micropack (run|build) [options]

  -h, --help - Show this help message

  run - start the server, default command

  [options]
    -H, --host - Host to listen on [0.0.0.0]
    -p, --port - Port to listen on [3000]

  build - compile files to [dist]

  [options]
    -w, --watch - recompile files on save
  `)
}

if (args.help) {
  help()
  process.exit(0)
}

if (func === 'run') {
  process.env.NODE_ENV = process.env.NODE_ENV || 'development'
  const run            = require('../src/index')
  const { port, host } = args

  serve(run).listen(port, host, err => {
    if (err) {
      console.error('micro:', err.stack) // eslint-disable-line no-console
      process.exit(1)
    }
    console.log(`> Ready! Listening on http://${host}:${port}`) // eslint-disable-line no-console
  })
}
